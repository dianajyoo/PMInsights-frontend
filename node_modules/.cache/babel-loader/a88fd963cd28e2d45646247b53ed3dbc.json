{"ast":null,"code":"export var fetchHasErrored = function fetchHasErrored(bool) {\n  return {\n    type: 'FETCH_HAS_ERRORED',\n    hasErrored: bool\n  };\n};\nexport var fetchIsLoading = function fetchIsLoading(bool) {\n  return {\n    type: 'FETCH_IS_LOADING',\n    isLoading: bool\n  };\n};\nexport var fetchUserSuccess = function fetchUserSuccess(user) {\n  return {\n    type: 'FETCH_USER_SUCCESS',\n    user: user\n  };\n};\nexport var storeToken = function storeToken(access_token) {\n  return {\n    type: 'STORE_TOKEN',\n    token: access_token\n  };\n};\nexport var storeSleepData = function storeSleepData(data) {\n  return {\n    type: 'STORE_SLEEP',\n    data: data\n  };\n};\nexport var setGoalDate = function setGoalDate(date) {\n  return {\n    type: 'SET_GOAL_DATE',\n    goalDate: date\n  };\n};\nexport var setBedtime = function setBedtime(time) {\n  return {\n    type: 'SET_BEDTIME',\n    bedtimeTarget: time\n  };\n};\nexport var setWakeupTime = function setWakeupTime(time) {\n  return {\n    type: 'SET_WAKEUP_TIME',\n    wakeupTarget: time\n  };\n};\nexport var setFitbitUser = function setFitbitUser(user) {\n  return {\n    type: 'SET_FITBIT_USER',\n    user: user\n  };\n}; // <--- redux thunk here --->\n\nexport var fetchUserData = function fetchUserData(url, token) {\n  return function (dispatch) {\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      return dispatch(fetchUserSuccess(user));\n    }).catch(function () {\n      return dispatch(fetchHasErrored(true));\n    });\n  };\n};\nexport var fetchSleepData = function fetchSleepData(url, token) {\n  return function (dispatch) {\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(storeSleepData(data));\n    }).catch(function () {\n      return dispatch(fetchHasErrored(true));\n    });\n  };\n};\nexport var fetchSleepGoals = function fetchSleepGoals(goalDate, bedtimeTarget, wakeupTarget, fitBitUser, token) {\n  return function (dispatch) {\n    fetch('http://localhost:3000/api/v1/goals', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n      body: JSON.stringify({\n        goalDate: goalDate,\n        bedtimeTarget: bedtimeTarget,\n        wakeupTarget: wakeupTarget,\n        user_id: fitBitUser.id\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      debugger;\n      console.log(data);\n      dispatch(setGoalDate(data.goalDate));\n      dispatch(setBedtime(data.bedtimeTarget));\n      dispatch(setWakeupTime(data.wakeupTarget));\n    }).catch(console.error);\n  };\n};\nexport var fetchBackendUserData = function fetchBackendUserData(token, fitBitUser) {\n  return function (dispatch) {\n    fetch('http://localhost:3000/api/v1/users', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      data.forEach(function (user) {\n        if (fitBitUser.encodedId === user.encodedId) {\n          dispatch(setFitbitUser(user));\n        }\n      });\n    }).catch(function () {\n      return dispatch(fetchHasErrored(true));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/actionCreators/userActions.js"],"names":["fetchHasErrored","bool","type","hasErrored","fetchIsLoading","isLoading","fetchUserSuccess","user","storeToken","access_token","token","storeSleepData","data","setGoalDate","date","goalDate","setBedtime","time","bedtimeTarget","setWakeupTime","wakeupTarget","setFitbitUser","fetchUserData","url","dispatch","fetch","method","headers","then","res","json","catch","fetchSleepData","fetchSleepGoals","fitBitUser","body","JSON","stringify","user_id","id","console","log","error","fetchBackendUserData","forEach","encodedId"],"mappings":"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","sourcesContent":["export const fetchHasErrored = (bool) => {\n  return {\n    type: 'FETCH_HAS_ERRORED',\n    hasErrored: bool\n  }\n}\n\nexport const fetchIsLoading = (bool) => {\n  return {\n    type: 'FETCH_IS_LOADING',\n    isLoading: bool\n  }\n}\n\nexport const fetchUserSuccess = (user) => {\n  return {\n    type: 'FETCH_USER_SUCCESS',\n    user\n  }\n}\n\nexport const storeToken = (access_token) => {\n  return {\n    type: 'STORE_TOKEN',\n    token: access_token\n  }\n}\n\nexport const storeSleepData = (data) => {\n  return {\n    type: 'STORE_SLEEP',\n    data\n  }\n}\n\nexport const setGoalDate = (date) => {\n  return {\n    type: 'SET_GOAL_DATE',\n    goalDate: date\n  }\n}\n\nexport const setBedtime = (time) => {\n  return {\n    type: 'SET_BEDTIME',\n    bedtimeTarget: time\n  }\n}\n\nexport const setWakeupTime = (time) => {\n  return {\n    type: 'SET_WAKEUP_TIME',\n    wakeupTarget: time\n  }\n}\n\nexport const setFitbitUser = (user) => {\n  return {\n    type: 'SET_FITBIT_USER',\n    user: user\n  }\n}\n\n\n\n// <--- redux thunk here --->\n\nexport const fetchUserData = (url, token) => {\n    return (dispatch) => {\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      })\n        .then(res => res.json())\n        .then(user => dispatch(fetchUserSuccess(user)))\n        .catch(() => dispatch(fetchHasErrored(true)))\n    }\n}\n\nexport const fetchSleepData = (url, token) => {\n    return (dispatch) => {\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          dispatch(storeSleepData(data))})\n        .catch(() => dispatch(fetchHasErrored(true)))\n    }\n}\n\nexport const fetchSleepGoals = (goalDate, bedtimeTarget, wakeupTarget, fitBitUser, token) => {\n    return (dispatch) => {\n      fetch('http://localhost:3000/api/v1/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          goalDate: goalDate,\n          bedtimeTarget: bedtimeTarget,\n          wakeupTarget: wakeupTarget,\n          user_id: fitBitUser.id\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          debugger\n          console.log(data)\n          dispatch(setGoalDate(data.goalDate))\n          dispatch(setBedtime(data.bedtimeTarget))\n          dispatch(setWakeupTime(data.wakeupTarget))\n        })\n        .catch(console.error)\n    }\n}\n\nexport const fetchBackendUserData = (token, fitBitUser) => {\n    return (dispatch) => {\n      fetch('http://localhost:3000/api/v1/users', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          data.forEach(user => {\n            if (fitBitUser.encodedId === user.encodedId){\n              dispatch(setFitbitUser(user))\n            }\n          })\n        })\n        .catch(() => dispatch(fetchHasErrored(true)))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}