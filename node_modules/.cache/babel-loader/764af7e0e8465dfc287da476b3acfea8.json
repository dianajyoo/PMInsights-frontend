{"ast":null,"code":"// import { access_token } from '../App.js'\nexport var fetchHasErrored = function fetchHasErrored(bool) {\n  return {\n    type: 'FETCH_HAS_ERRORED',\n    hasErrored: bool\n  };\n};\nexport var fetchIsLoading = function fetchIsLoading(bool) {\n  return {\n    type: 'FETCH_IS_LOADING',\n    isLoading: bool\n  };\n};\nexport var fetchUserSuccess = function fetchUserSuccess(user) {\n  return {\n    type: 'FETCH_USER_SUCCESS',\n    user: user\n  };\n};\nexport var storeToken = function storeToken(access_token) {\n  return {\n    type: 'STORE_TOKEN',\n    token: access_token\n  };\n};\nexport var storeSleepData = function storeSleepData(data) {\n  return {\n    type: \"STORE_SLEEP\",\n    data: data\n  };\n}; // <--- redux thunk here --->\n\nexport var fetchUserData = function fetchUserData(url, token) {\n  return function (dispatch) {\n    dispatch(fetchIsLoading(true));\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(function (res) {\n      if (!res.ok) {\n        throw Error(res.statusText);\n      }\n\n      dispatch(fetchIsLoading(false));\n      return res;\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      return dispatch(fetchUserSuccess(user));\n    }).catch(function () {\n      return dispatch(fetchHasErrored(true));\n    });\n  };\n};\nexport var fetchUserSleepData = function fetchUserSleepData(url, token) {\n  return function (dispatch) {\n    dispatch(url);\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      }\n    }) // .then(res => {\n    //   if (!res.ok) {\n    //     throw Error(res.statusText);\n    //   }\n    //   dispatch(fetchIsLoading(false));\n    //   return res;\n    // })\n    .then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(storeSleepData(data));\n    }).catch(function () {\n      return dispatch(fetchHasErrored(true));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/actionCreators/userActions.js"],"names":["fetchHasErrored","bool","type","hasErrored","fetchIsLoading","isLoading","fetchUserSuccess","user","storeToken","access_token","token","storeSleepData","data","fetchUserData","url","dispatch","fetch","method","headers","then","res","ok","Error","statusText","json","catch","fetchUserSleepData"],"mappings":"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","sourcesContent":["// import { access_token } from '../App.js'\n\nexport const fetchHasErrored = (bool) => {\n  return {\n      type: 'FETCH_HAS_ERRORED',\n      hasErrored: bool\n  }\n}\nexport const fetchIsLoading = (bool) => {\n  return {\n      type: 'FETCH_IS_LOADING',\n      isLoading: bool\n  }\n}\nexport const fetchUserSuccess = (user) => {\n  return {\n      type: 'FETCH_USER_SUCCESS',\n      user\n  }\n}\nexport const storeToken = (access_token) => {\n  return {\n      type: 'STORE_TOKEN',\n      token: access_token\n  }\n}\n\nexport const storeSleepData = (data) => {\n  return {\n    type: \"STORE_SLEEP\",\n    data\n  }\n}\n\n\n// <--- redux thunk here --->\n\nexport const fetchUserData = (url, token) => {\n    return (dispatch) => {\n      dispatch(fetchIsLoading(true));\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token\n        }\n      })\n        .then(res => {\n          if (!res.ok) {\n            throw Error(res.statusText);\n          }\n          dispatch(fetchIsLoading(false));\n          return res;\n        })\n        .then(res => res.json())\n        .then(user => dispatch(fetchUserSuccess(user)))\n        .catch(() => dispatch(fetchHasErrored(true)));\n    };\n}\n\nexport const fetchUserSleepData = (url, token) => {\n    return (dispatch) => {\n      dispatch(url);\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + token\n        }\n      })\n        // .then(res => {\n        //   if (!res.ok) {\n        //     throw Error(res.statusText);\n        //   }\n        //   dispatch(fetchIsLoading(false));\n        //   return res;\n        // })\n        .then(res => res.json())\n        .then(data => dispatch(storeSleepData(data)))\n        .catch(() => dispatch(fetchHasErrored(true)));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}