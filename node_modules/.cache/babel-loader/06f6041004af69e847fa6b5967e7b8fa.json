{"ast":null,"code":"export var fetchHasErrored = function fetchHasErrored(bool) {\n  return {\n    type: 'FETCH_HAS_ERRORED',\n    hasErrored: bool\n  };\n};\nexport var fetchIsLoading = function fetchIsLoading(bool) {\n  return {\n    type: 'FETCH_IS_LOADING',\n    isLoading: bool\n  };\n};\nexport var fetchUserSuccess = function fetchUserSuccess(user) {\n  return {\n    type: 'FETCH_USER_SUCCESS',\n    user: user\n  };\n};\nexport var storeToken = function storeToken(access_token) {\n  return {\n    type: 'STORE_TOKEN',\n    token: access_token\n  };\n};\nexport var storeSleepData = function storeSleepData(data) {\n  return {\n    type: 'STORE_SLEEP',\n    data: data\n  };\n};\nexport var setGoalDate = function setGoalDate(date) {\n  return {\n    type: 'SET_GOAL_DATE',\n    date: date\n  };\n};\nexport var setBedtime = function setBedtime(time) {\n  return {\n    type: 'SET_BEDTIME',\n    time: time\n  };\n};\nexport var setWakeupTime = function setWakeupTime(time) {\n  return {\n    type: 'SET_WAKEUP_TIME',\n    time: time\n  };\n}; // <--- redux thunk here --->\n\nexport var fetchUserData = function fetchUserData(url, token) {\n  return function (dispatch) {\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(function (res) {\n      if (!res.ok) {\n        throw Error(res.statusText);\n      }\n\n      dispatch(fetchIsLoading(false));\n      return res;\n    }).then(function (res) {\n      return res.json();\n    }).then(function (user) {\n      return dispatch(fetchUserSuccess(user));\n    }).catch(function () {\n      return dispatch(fetchHasErrored(true));\n    });\n  };\n};\nexport var fetchSleepData = function fetchSleepData(url, token) {\n  return function (dispatch) {\n    fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(storeSleepData(data));\n    }).catch(function () {\n      return dispatch(fetchHasErrored(true));\n    });\n  };\n};\nexport var fetchGoalDate = function fetchGoalDate(goalDate, bedtimeTarget, wakeupTarget, token) {\n  return function (dispatch) {\n    fetch('http://localhost:3000/api/v1/goals', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      },\n      body: JSON.stringify({\n        goalDate: goalDate,\n        bedtimeTarget: bedtimeTarget,\n        wakeupTarget: wakeupTarget\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(setGoalDate(data));\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/actionCreators/userActions.js"],"names":["fetchHasErrored","bool","type","hasErrored","fetchIsLoading","isLoading","fetchUserSuccess","user","storeToken","access_token","token","storeSleepData","data","setGoalDate","date","setBedtime","time","setWakeupTime","fetchUserData","url","dispatch","fetch","method","headers","then","res","ok","Error","statusText","json","catch","fetchSleepData","fetchGoalDate","goalDate","bedtimeTarget","wakeupTarget","body","JSON","stringify","console","error"],"mappings":"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","sourcesContent":["export const fetchHasErrored = (bool) => {\n  return {\n      type: 'FETCH_HAS_ERRORED',\n      hasErrored: bool\n  }\n}\n\nexport const fetchIsLoading = (bool) => {\n  return {\n      type: 'FETCH_IS_LOADING',\n      isLoading: bool\n  }\n}\n\nexport const fetchUserSuccess = (user) => {\n  return {\n      type: 'FETCH_USER_SUCCESS',\n      user\n  }\n}\n\nexport const storeToken = (access_token) => {\n  return {\n      type: 'STORE_TOKEN',\n      token: access_token\n  }\n}\n\nexport const storeSleepData = (data) => {\n  return {\n    type: 'STORE_SLEEP',\n    data\n  }\n}\n\nexport const setGoalDate = (date) => {\n  return {\n    type: 'SET_GOAL_DATE',\n    date\n  }\n}\n\nexport const setBedtime = (time) => {\n  return {\n    type: 'SET_BEDTIME',\n    time\n  }\n}\n\nexport const setWakeupTime = (time) => {\n  return {\n    type: 'SET_WAKEUP_TIME',\n    time\n  }\n}\n\n\n// <--- redux thunk here --->\n\nexport const fetchUserData = (url, token) => {\n    return (dispatch) => {\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      })\n        .then(res => {\n          if (!res.ok) {\n            throw Error(res.statusText)\n          }\n          dispatch(fetchIsLoading(false))\n          return res;\n        })\n        .then(res => res.json())\n        .then(user => dispatch(fetchUserSuccess(user)))\n        .catch(() => dispatch(fetchHasErrored(true)))\n    }\n}\n\nexport const fetchSleepData = (url, token) => {\n    return (dispatch) => {\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      })\n        .then(res => res.json())\n        .then(data => {\n          dispatch(storeSleepData(data))})\n        .catch(() => dispatch(fetchHasErrored(true)))\n    }\n}\n\nexport const fetchGoalDate = (goalDate, bedtimeTarget, wakeupTarget, token) => {\n    return (dispatch) => {\n      fetch('http://localhost:3000/api/v1/goals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          goalDate: goalDate,\n          bedtimeTarget: bedtimeTarget,\n          wakeupTarget: wakeupTarget\n        })\n      })\n        .then(res => res.json())\n        .then(data => {\n          dispatch(setGoalDate(data))})\n        .catch(console.error)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}