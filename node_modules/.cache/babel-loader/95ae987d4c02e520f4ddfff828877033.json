{"ast":null,"code":"import _classCallCheck from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/goals/GoalForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSleepGoals, fetchBackendUserData, fetchUserData, fetchEditedGoals } from '../../store/actionCreators/userActions';\nimport DatePicker from 'react-datepicker';\nimport '../../../node_modules/react-datepicker/dist/react-datepicker.css';\nimport '../../styling/GoalForm.css';\nimport { Form, Container, Grid } from 'semantic-ui-react';\n\nvar GoalForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoalForm, _React$Component);\n\n  function GoalForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoalForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoalForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      startDate: new Date(),\n      dateEvent: {},\n      bedtimeEvent: {},\n      wakeupEvent: {}\n    };\n\n    _this.handleChange = function (e, date) {\n      // debugger\n      _this.setState({\n        startDate: date,\n        dateEvent: e\n      });\n\n      console.log(e.toString().split(' ').slice(0, 4).join(' '));\n      return e.toString().split(' ').slice(0, 4).join(' ');\n    };\n\n    _this.handleBedtimeChange = function (e) {\n      var militaryHour = Number(e.toString().split(' ')[4].split(':')[0]);\n      var minutes = e.toString().split(' ')[4].split(':')[1];\n\n      _this.setState({\n        bedtimeEvent: e\n      });\n\n      if (militaryHour > 12) {\n        militaryHour -= 12;\n        console.log(militaryHour.toString() + ':' + minutes + ' PM');\n        return militaryHour.toString() + ':' + minutes + ' PM';\n      } else {\n        console.log(militaryHour.toString() + ':' + minutes + ' AM');\n        return militaryHour.toString() + ':' + minutes + ' AM';\n      }\n    };\n\n    _this.handleWaketimeChange = function (e) {\n      var militaryHour = Number(e.toString().split(' ')[4].split(':')[0]);\n      var minutes = e.toString().split(' ')[4].split(':')[1];\n\n      _this.setState({\n        wakeupEvent: e\n      });\n\n      if (militaryHour > 12) {\n        militaryHour -= 12;\n        console.log(militaryHour.toString() + ':' + minutes + ' PM');\n        return militaryHour.toString() + ':' + minutes + ' PM';\n      } else {\n        console.log(militaryHour.toString() + ':' + minutes + ' AM');\n        return militaryHour.toString() + ':' + minutes + ' AM';\n      }\n    };\n\n    _this.handleSubmit = function (handleChange, handleBedtimeChange, handleWaketimeChange, e) {\n      e.preventDefault();\n\n      if (window.location.href.includes('edit')) {\n        _this.props.editedGoals(_this.props.id, _this.handleChange(_this.state.dateEvent), _this.handleBedtimeChange(_this.state.bedtimeEvent), _this.handleWaketimeChange(_this.state.wakeupEvent), _this.props.token);\n      } else {\n        _this.props.sleepGoal(_this.handleChange(_this.state.dateEvent), _this.handleBedtimeChange(_this.state.bedtimeEvent), _this.handleWaketimeChange(_this.state.wakeupEvent), _this.props.fitBitUser, _this.props.token);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GoalForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userToken = localStorage.getItem('token');\n\n      if (userToken) {\n        this.props.sleepInfo('https://api.fitbit.com/1/user/-/profile.json', userToken);\n      }\n\n      if (this.props.user.user) {\n        this.props.backendUser(this.props.token, this.props.user.user);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"goal-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(_this2.handleChange, _this2.handleBedtimeChange, _this2.handleWaketimeChange, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Goal Date\", React.createElement(Form.Group, {\n        style: {\n          minWidth: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        className: \"datepicker\",\n        isClearable: false,\n        selected: this.state.startDate,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Bedtime Target\", React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        className: \"datepicker\",\n        isClearable: false,\n        selected: this.state.startDate,\n        onChange: function onChange(e) {\n          return _this2.handleBedtimeChange(e);\n        },\n        showTimeSelect: true,\n        showTimeSelectOnly: true,\n        timeIntervals: 15,\n        dateFormat: \"h:mm aa\",\n        timeCaption: \"Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Wakeup Time Target\", React.createElement(Form.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        className: \"datepicker\",\n        isClearable: false,\n        selected: this.state.startDate,\n        onChange: function onChange(e) {\n          return _this2.handleWaketimeChange(e);\n        },\n        showTimeSelect: true,\n        showTimeSelectOnly: true,\n        timeIntervals: 15,\n        dateFormat: \"h:mm aa\",\n        timeCaption: \"Time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"circular ui icon button\",\n        id: \"submit-btn\",\n        onClick: function onClick(e) {\n          return _this2.props.handleClose(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"plus icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })))))))));\n    }\n  }]);\n\n  return GoalForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.user,\n    token: state.user.token,\n    fitBitUser: state.user.fitBitUser,\n    goalDate: state.setGoal.goalDate,\n    bedtimeTarget: state.setGoal.bedtimeTarget,\n    wakeupTarget: state.setGoal.wakeupTarget\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    sleepGoal: function sleepGoal(goalDate, bedtimeTarget, wakeupTarget, user, token) {\n      console.log(\"in mapDispatchToProps\", user);\n      dispatch(fetchSleepGoals(goalDate, bedtimeTarget, wakeupTarget, user, token));\n    },\n    backendUser: function backendUser(token, user) {\n      dispatch(fetchBackendUserData(token, user));\n    },\n    editedGoals: function editedGoals(goalId, goalDate, bedTimeTarget, wakeupTarget, token) {\n      dispatch(fetchEditedGoals(goalId, goalDate, bedTimeTarget, wakeupTarget, token));\n    },\n    sleepInfo: function sleepInfo(url, access_token) {\n      return dispatch(fetchUserData(url, access_token));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoalForm);","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/goals/GoalForm.js"],"names":["React","connect","fetchSleepGoals","fetchBackendUserData","fetchUserData","fetchEditedGoals","DatePicker","Form","Container","Grid","GoalForm","state","startDate","Date","dateEvent","bedtimeEvent","wakeupEvent","handleChange","e","date","setState","console","log","toString","split","slice","join","handleBedtimeChange","militaryHour","Number","minutes","handleWaketimeChange","handleSubmit","preventDefault","window","location","href","includes","props","editedGoals","id","token","sleepGoal","fitBitUser","userToken","localStorage","getItem","sleepInfo","user","backendUser","minWidth","handleClose","Component","mapStateToProps","goalDate","setGoal","bedtimeTarget","wakeupTarget","mapDispatchToProps","dispatch","goalId","bedTimeTarget","url","access_token"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchSleepGoals,fetchBackendUserData, fetchUserData, fetchEditedGoals } from '../../store/actionCreators/userActions'\n\nimport DatePicker from 'react-datepicker'\nimport '../../../node_modules/react-datepicker/dist/react-datepicker.css'\nimport '../../styling/GoalForm.css'\n\nimport { Form, Container, Grid } from 'semantic-ui-react'\n\nclass GoalForm extends React.Component {\n\n  state = {\n    startDate: new Date(),\n    dateEvent: {},\n    bedtimeEvent: {},\n    wakeupEvent: {}\n  }\n\n  componentDidMount() {\n\n    const userToken = localStorage.getItem('token')\n\n    if (userToken) {\n      this.props.sleepInfo('https://api.fitbit.com/1/user/-/profile.json', userToken)\n    }\n\n    if (this.props.user.user) {\n      this.props.backendUser(this.props.token, this.props.user.user)\n    }\n  }\n\n  handleChange = (e, date) => {\n    // debugger\n\n    this.setState({\n      startDate: date,\n      dateEvent: e\n    })\n\n    console.log(e.toString().split(' ').slice(0, 4).join(' '))\n\n    return e.toString().split(' ').slice(0, 4).join(' ')\n  }\n\n  handleBedtimeChange = (e) => {\n\n    let militaryHour = Number(e.toString().split(' ')[4].split(':')[0])\n    let minutes = e.toString().split(' ')[4].split(':')[1]\n\n    this.setState({\n      bedtimeEvent: e\n    })\n\n    if (militaryHour > 12) {\n      militaryHour -= 12\n      console.log(militaryHour.toString() + ':' + minutes + ' PM')\n      return militaryHour.toString() + ':' + minutes + ' PM'\n    } else {\n      console.log(militaryHour.toString() + ':' + minutes + ' AM')\n      return militaryHour.toString() + ':' + minutes + ' AM'\n    }\n  }\n\n  handleWaketimeChange = (e) => {\n\n    let militaryHour = Number(e.toString().split(' ')[4].split(':')[0])\n    let minutes = e.toString().split(' ')[4].split(':')[1]\n\n    this.setState({\n      wakeupEvent: e\n    })\n\n    if (militaryHour > 12) {\n      militaryHour -= 12\n      console.log(militaryHour.toString() + ':' + minutes + ' PM')\n      return militaryHour.toString() + ':' + minutes + ' PM'\n    } else {\n      console.log(militaryHour.toString() + ':' + minutes + ' AM')\n      return militaryHour.toString() + ':' + minutes + ' AM'\n    }\n  }\n\n  handleSubmit = (handleChange, handleBedtimeChange, handleWaketimeChange, e) => {\n    e.preventDefault()\n\n    if (window.location.href.includes('edit')) {\n      this.props.editedGoals(this.props.id,\n        this.handleChange(this.state.dateEvent), this.handleBedtimeChange(this.state.bedtimeEvent),\n        this.handleWaketimeChange(this.state.wakeupEvent), this.props.token)\n    }\n    else {\n      this.props.sleepGoal(this.handleChange(this.state.dateEvent), this.handleBedtimeChange(this.state.bedtimeEvent), this.handleWaketimeChange(this.state.wakeupEvent), this.props.fitBitUser, this.props.token)\n    }\n  }\n\n  render() {\n    return (\n      <div className='goal-form'>\n        <Container>\n          <Grid>\n            <Grid.Row centered>\n              <Grid.Column width={6}>\n                <div className='form'>\n                  <Form onSubmit={(e) => this.handleSubmit(this.handleChange, this.handleBedtimeChange, this.handleWaketimeChange, e)}>\n\n                    <label>\n                      Goal Date\n                        <Form.Group style={{minWidth:3}} >\n                          <DatePicker\n                            className='datepicker'\n                            isClearable={false}\n                            selected={this.state.startDate}\n                            onChange={e => this.handleChange(e)}\n                          />\n                        </Form.Group>\n                    </label>\n\n                    <label>\n                      Bedtime Target\n                        <Form.Group >\n                          <DatePicker\n                            className='datepicker'\n                            isClearable={false}\n                            selected={this.state.startDate}\n                            onChange={e => this.handleBedtimeChange(e)}\n                            showTimeSelect\n                            showTimeSelectOnly\n                            timeIntervals={15}\n                            dateFormat='h:mm aa'\n                            timeCaption='Time'\n                          />\n                        </Form.Group>\n                    </label>\n\n                    <label>\n                      Wakeup Time Target\n                        <Form.Group >\n                          <DatePicker\n                            className='datepicker'\n                            isClearable={false}\n                            selected={this.state.startDate}\n                            onChange={e => this.handleWaketimeChange(e)}\n                            showTimeSelect\n                            showTimeSelectOnly\n                            timeIntervals={15}\n                            dateFormat='h:mm aa'\n                            timeCaption='Time'\n                          />\n                        </Form.Group>\n                    </label>\n\n                    <button className=\"circular ui icon button\" id='submit-btn' onClick={e => this.props.handleClose(e)}>\n                      <i className=\"plus icon\"></i>\n                    </button>\n\n                  </Form>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.user,\n    token: state.user.token,\n    fitBitUser: state.user.fitBitUser,\n    goalDate: state.setGoal.goalDate,\n    bedtimeTarget: state.setGoal.bedtimeTarget,\n    wakeupTarget: state.setGoal.wakeupTarget\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sleepGoal: (goalDate, bedtimeTarget, wakeupTarget, user, token) => {\n      console.log(\"in mapDispatchToProps\", user);\n      dispatch(fetchSleepGoals(goalDate, bedtimeTarget, wakeupTarget, user, token))\n    },\n    backendUser: (token, user) => {\n      dispatch(fetchBackendUserData(token, user))\n    },\n    editedGoals: (goalId, goalDate, bedTimeTarget, wakeupTarget, token) => {\n      dispatch(fetchEditedGoals(goalId, goalDate, bedTimeTarget, wakeupTarget, token))\n    },\n    sleepInfo: (url, access_token) => dispatch(fetchUserData(url, access_token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GoalForm)\n"]},"metadata":{},"sourceType":"module"}