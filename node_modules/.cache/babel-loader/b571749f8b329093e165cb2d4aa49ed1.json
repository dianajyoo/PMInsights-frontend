{"ast":null,"code":"import _classCallCheck from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/SleepEfficiency.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSleepData, fetchUserData } from '../actionCreators/userActions';\nimport Profile from './Profile';\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\n\nvar SleepContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SleepContainer, _React$Component);\n\n  function SleepContainer() {\n    _classCallCheck(this, SleepContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SleepContainer).apply(this, arguments));\n  }\n\n  _createClass(SleepContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userToken = localStorage.getItem('token');\n\n      if (userToken) {\n        this.props.sleepInfo('https://api.fitbit.com/1/user/-/profile.json', userToken);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var efficiency;\n      var hours_slept;\n\n      if (this.props.sleep.sleep) {\n        efficiency = this.props.sleep.sleep[0].efficiency; // round to one decimal place\n\n        hours_slept = Math.round(this.props.sleep.sleep[0].duration / 3600000 * 10 / 10);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"progress-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Progress, {\n        type: \"circle\",\n        width: 160,\n        strokeWidth: 13,\n        percent: efficiency,\n        theme: {\n          active: {\n            trailColor: 'rgb(244,244,244)',\n            color: 'rgb(228,65,4)'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SleepContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    token: state.token,\n    sleep: state.sleep\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    sleepInfo: function sleepInfo(url, access_token) {\n      return dispatch(fetchUserData(url, access_token));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SleepContainer); // <div className='sleep-stats'>\n// <h3>Date of Sleep:</h3>\n// { this.props.sleep_data.sleep ? this.props.sleep_data.sleep[0].dateOfSleep : ' N/A' } <br /><br />\n//\n// <h3>Duration of Sleep:</h3>\n// { this.props.sleep_data.sleep ? hours_slept + ' hrs' : ' N/A' }\n// </div>","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/SleepEfficiency.js"],"names":["React","connect","fetchSleepData","fetchUserData","Profile","Progress","SleepContainer","userToken","localStorage","getItem","props","sleepInfo","console","log","efficiency","hours_slept","sleep","Math","round","duration","active","trailColor","color","Component","mapStateToProps","state","token","mapDispatchToProps","dispatch","url","access_token"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,+BAA9C;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,oCAAP;;IAEMC,c;;;;;;;;;;;;;wCAEgB;AAElB,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;;AAEA,UAAIF,SAAJ,EAAe;AACb,aAAKG,KAAL,CAAWC,SAAX,CAAqB,8CAArB,EAAqEJ,SAArE;AACD;AAEF;;;6BAEQ;AACPK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACA,UAAII,UAAJ;AACA,UAAIC,WAAJ;;AAEA,UAAI,KAAKL,KAAL,CAAWM,KAAX,CAAiBA,KAArB,EAA4B;AAC1BF,QAAAA,UAAU,GAAG,KAAKJ,KAAL,CAAWM,KAAX,CAAiBA,KAAjB,CAAuB,CAAvB,EAA0BF,UAAvC,CAD0B,CAG1B;;AACAC,QAAAA,WAAW,GAAGE,IAAI,CAACC,KAAL,CAAY,KAAKR,KAAL,CAAWM,KAAX,CAAiBA,KAAjB,CAAuB,CAAvB,EAA0BG,QAA1B,GAAqC,OAAtC,GAAiD,EAAjD,GAAsD,EAAjE,CAAd;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAE,GAFT;AAGE,QAAA,WAAW,EAAE,EAHf;AAIE,QAAA,OAAO,EAAEL,UAJX;AAKE,QAAA,KAAK,EAAE;AACLM,UAAAA,MAAM,EAAE;AACNC,YAAAA,UAAU,EAAE,kBADN;AAENC,YAAAA,KAAK,EAAE;AAFD;AADH,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAgBD;;;;EAxC0BtB,KAAK,CAACuB,S;;AA2CnC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELV,IAAAA,KAAK,EAAES,KAAK,CAACT;AAFR,GAAP;AAID,CALD;;AAOA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLjB,IAAAA,SAAS,EAAE,mBAACkB,GAAD,EAAMC,YAAN;AAAA,aAAuBF,QAAQ,CAACzB,aAAa,CAAC0B,GAAD,EAAMC,YAAN,CAAd,CAA/B;AAAA;AADN,GAAP;AAGD,CAJD;;AAMA,eAAe7B,OAAO,CAACuB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,cAA7C,CAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchSleepData, fetchUserData } from '../actionCreators/userActions'\n\nimport Profile from './Profile'\n\nimport { Progress } from 'react-sweet-progress'\nimport \"react-sweet-progress/lib/style.css\"\n\nclass SleepContainer extends React.Component {\n\n  componentDidMount() {\n\n    const userToken = localStorage.getItem('token')\n\n    if (userToken) {\n      this.props.sleepInfo('https://api.fitbit.com/1/user/-/profile.json', userToken)\n    }\n\n  }\n\n  render() {\n    console.log(this.props)\n    let efficiency\n    let hours_slept\n\n    if (this.props.sleep.sleep) {\n      efficiency = this.props.sleep.sleep[0].efficiency\n\n      // round to one decimal place\n      hours_slept = Math.round((this.props.sleep.sleep[0].duration / 3600000) * 10 / 10)\n    }\n\n    return (\n      <div className='progress-circle'>\n        <Progress\n          type=\"circle\"\n          width={160}\n          strokeWidth={13}\n          percent={efficiency}\n          theme={{\n            active: {\n              trailColor: 'rgb(244,244,244)',\n              color: 'rgb(228,65,4)'\n            }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token,\n    sleep: state.sleep\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    sleepInfo: (url, access_token) => dispatch(fetchUserData(url, access_token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SleepContainer)\n\n// <div className='sleep-stats'>\n// <h3>Date of Sleep:</h3>\n// { this.props.sleep_data.sleep ? this.props.sleep_data.sleep[0].dateOfSleep : ' N/A' } <br /><br />\n//\n// <h3>Duration of Sleep:</h3>\n// { this.props.sleep_data.sleep ? hours_slept + ' hrs' : ' N/A' }\n// </div>\n"]},"metadata":{},"sourceType":"module"}