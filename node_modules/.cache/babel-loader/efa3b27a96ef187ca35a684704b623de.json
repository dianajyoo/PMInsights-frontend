{"ast":null,"code":"import _objectSpread from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  user: {},\n  fetchIsLoading: false,\n  fetchHasErrored: false,\n  token: '',\n  sleep: {},\n  goalDate: '',\n  bedtimeTarget: '',\n  wakeupTarget: '',\n  fitBitUser: {}\n};\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCH_HAS_ERRORED':\n      return _objectSpread({}, state, {\n        fetchHasErrored: action.fetchHasErrored\n      });\n\n    case 'FETCH_IS_LOADING':\n      return _objectSpread({}, state, {\n        fetchIsLoading: action.fetchIsLoading\n      });\n\n    case 'FETCH_USER_SUCCESS':\n      return _objectSpread({}, state, {\n        user: action.user\n      });\n\n    case 'STORE_TOKEN':\n      // debugger\n      return _objectSpread({}, state, {\n        token: action.token\n      });\n\n    case 'STORE_SLEEP':\n      return _objectSpread({}, state, {\n        sleep: action.data\n      });\n\n    case 'SET_GOAL_DATE':\n      return _objectSpread({}, state, {\n        goalDate: action.goalDate\n      });\n\n    case 'SET_BEDTIME':\n      return _objectSpread({}, state, {\n        bedtimeTarget: action.bedtimeTarget\n      });\n\n    case 'SET_WAKEUP_TIME':\n      return _objectSpread({}, state, {\n        wakeupTarget: action.wakeupTarget\n      });\n\n    case \"SET_FITBIT_USER\":\n      return _objectSpread({}, state, {\n        fitBitUser: action.user\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/reducers/users.js"],"names":["initialState","user","fetchIsLoading","fetchHasErrored","token","sleep","goalDate","bedtimeTarget","wakeupTarget","fitBitUser","userReducer","state","action","type","data"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,cAAc,EAAE,KAFG;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,KAAK,EAAE,EALY;AAMnBC,EAAAA,QAAQ,EAAE,EANS;AAOnBC,EAAAA,aAAa,EAAE,EAPI;AAQnBC,EAAAA,YAAY,EAAE,EARK;AASnBC,EAAAA,UAAU,EAAE;AATO,CAArB;;AAYA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,+BACKF,KADL;AACYR,QAAAA,eAAe,EAAES,MAAM,CAACT;AADpC;;AAGF,SAAK,kBAAL;AACE,+BACKQ,KADL;AACYT,QAAAA,cAAc,EAAEU,MAAM,CAACV;AADnC;;AAGF,SAAK,oBAAL;AACE,+BACKS,KADL;AACYV,QAAAA,IAAI,EAAEW,MAAM,CAACX;AADzB;;AAGF,SAAK,aAAL;AACE;AACA,+BACKU,KADL;AACYP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAD1B;;AAGF,SAAK,aAAL;AACE,+BACKO,KADL;AACYN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAD1B;;AAGF,SAAK,eAAL;AACE,+BACKH,KADL;AACYL,QAAAA,QAAQ,EAAEM,MAAM,CAACN;AAD7B;;AAGF,SAAK,aAAL;AACE,+BACKK,KADL;AACYJ,QAAAA,aAAa,EAAEK,MAAM,CAACL;AADlC;;AAGF,SAAK,iBAAL;AACE,+BACKI,KADL;AACYH,QAAAA,YAAY,EAAEI,MAAM,CAACJ;AADjC;;AAGF,SAAK,iBAAL;AACE,+BACKG,KADL;AACYF,QAAAA,UAAU,EAAEG,MAAM,CAACX;AAD/B;;AAGF;AACE,aAAOU,KAAP;AAvCJ;AAyCD,CA1CD;;AA4CA,eAAeD,WAAf","sourcesContent":["const initialState = {\n  user: {},\n  fetchIsLoading: false,\n  fetchHasErrored: false,\n  token: '',\n  sleep: {},\n  goalDate: '',\n  bedtimeTarget: '',\n  wakeupTarget: '',\n  fitBitUser: {}\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_HAS_ERRORED':\n      return {\n        ...state, fetchHasErrored: action.fetchHasErrored\n      }\n    case 'FETCH_IS_LOADING':\n      return {\n        ...state, fetchIsLoading: action.fetchIsLoading\n      }\n    case 'FETCH_USER_SUCCESS':\n      return {\n        ...state, user: action.user\n      }\n    case 'STORE_TOKEN':\n      // debugger\n      return {\n        ...state, token: action.token\n      }\n    case 'STORE_SLEEP':\n      return {\n        ...state, sleep: action.data\n      }\n    case 'SET_GOAL_DATE':\n      return {\n        ...state, goalDate: action.goalDate\n      }\n    case 'SET_BEDTIME':\n      return {\n        ...state, bedtimeTarget: action.bedtimeTarget\n      }\n    case 'SET_WAKEUP_TIME':\n      return {\n        ...state, wakeupTarget: action.wakeupTarget\n      }\n    case \"SET_FITBIT_USER\":\n      return {\n        ...state, fitBitUser: action.user\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n"]},"metadata":{},"sourceType":"module"}