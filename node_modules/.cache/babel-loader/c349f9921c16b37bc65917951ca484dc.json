{"ast":null,"code":"import _classCallCheck from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/ModalManager.js\";\nimport React from 'react';\nimport { Modal, Form, Button } from 'semantic-ui-react';\nimport GoalForm from './goals/GoalForm';\n\nvar ModalManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalManager, _React$Component);\n\n  function ModalManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ModalManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ModalManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showModal: false // handleChangeForms = (e, { value }) => {\n      //   this.setState({\n      //     something: value\n      //   })\n      // }\n\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        showModal: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalManager, [{\n    key: \"handleClose\",\n    value: function handleClose(e) {\n      e.preventDefault();\n      this.closeModal();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var showModal = this.state.showModal;\n      return React.createElement(Modal, {\n        closeIcon: true,\n        onClose: this.closeModal,\n        open: showModal,\n        trigger: React.createElement(\"span\", {\n          onClick: function onClick() {\n            return _this2.setState({\n              showModal: true\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Add Sleep Goal\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Add Sleep Goal\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(GoalForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ModalManager;\n}(React.Component);\n\nexport default ModalManager; // <Form.Input\n// label='Something'\n// value={something}\n// onChange={this.handleChangeForms}\n// />\n// <Button onClick={(evt) => this.handleClose(evt)}>Save</Button>","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/ModalManager.js"],"names":["React","Modal","Form","Button","GoalForm","ModalManager","state","showModal","closeModal","setState","e","preventDefault","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,mBAApC;AAEA,OAAOC,QAAP,MAAqB,kBAArB;;IAEMC,Y;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,KADL,CAIR;AACA;AACA;AACA;AACA;;AARQ,K;;UAgBRC,U,GAAa,YAAM;AACjB,YAAKC,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,K;;;;;;;gCAVWG,C,EAAG;AACbA,MAAAA,CAAC,CAACC,cAAF;AAEA,WAAKH,UAAL;AACD;;;6BAQQ;AAAA;;AAAA,UACCD,SADD,GACe,KAAKD,KADpB,CACCC,SADD;AAGP,aACE,oBAAC,KAAD;AAAO,QAAA,SAAS,MAAhB;AAAiB,QAAA,OAAO,EAAE,KAAKC,UAA/B;AAA2C,QAAA,IAAI,EAAED,SAAjD;AAA4D,QAAA,OAAO,EAAE;AAAM,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACE,QAAL,CAAc;AAAEF,cAAAA,SAAS,EAAE;AAAb,aAAd,CAAN;AAAA,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAFF,CADF;AAWD;;;;EAtCwBP,KAAK,CAACY,S;;AAyCjC,eAAeP,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react'\nimport { Modal, Form, Button } from 'semantic-ui-react'\n\nimport GoalForm from './goals/GoalForm'\n\nclass ModalManager extends React.Component {\n\n  state = {\n    showModal: false\n  }\n\n  // handleChangeForms = (e, { value }) => {\n  //   this.setState({\n  //     something: value\n  //   })\n  // }\n\n  handleClose(e) {\n    e.preventDefault()\n\n    this.closeModal()\n  }\n\n  closeModal = () => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  render() {\n    const { showModal } = this.state\n\n    return (\n      <Modal closeIcon onClose={this.closeModal} open={showModal} trigger={<span onClick={() => this.setState({ showModal: true })}>Add Sleep Goal</span>}>\n        <Modal.Header>Add Sleep Goal</Modal.Header>\n        <Modal.Content>\n          <Form>\n            <GoalForm />\n\n          </Form>\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n\nexport default ModalManager\n\n// <Form.Input\n// label='Something'\n// value={something}\n// onChange={this.handleChangeForms}\n// />\n\n// <Button onClick={(evt) => this.handleClose(evt)}>Save</Button>\n"]},"metadata":{},"sourceType":"module"}