{"ast":null,"code":"import _classCallCheck from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/analytics/LineGraph.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nvar LineGraph =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LineGraph, _React$Component);\n\n  function LineGraph() {\n    _classCallCheck(this, LineGraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(LineGraph).apply(this, arguments));\n  }\n\n  _createClass(LineGraph, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // const userToken = localStorage.getItem('token')\n      if (this.props.date !== prevProps.date) {\n        this.props.sleepInfo(this.props.date, this.props.token);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.sleep.sleep) {\n        var level = this.props.sleep.sleep[0].levels.data;\n        var data = [{\n          name: '10 PM',\n          light: level[0].seconds,\n          rem: level[4].seconds,\n          wake: level[0].seconds,\n          deep: level[6].seconds,\n          amt: 2400\n        }, {\n          name: '1 AM',\n          light: level[1].seconds,\n          rem: level[5].seconds,\n          wake: level[1].seconds,\n          deep: level[0].seconds,\n          amt: 2400\n        }, {\n          name: '4 AM',\n          light: level[2].seconds,\n          rem: level[0].seconds,\n          wake: level[2].seconds,\n          deep: level[3].seconds,\n          amt: 2400\n        }, {\n          name: '7 AM',\n          light: level[3].seconds,\n          rem: level[3].seconds,\n          wake: level[3].seconds,\n          deep: level[2].seconds,\n          amt: 2400\n        }];\n      }\n\n      return React.createElement(LineChart, {\n        width: 700,\n        height: 300,\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(XAxis, {\n        dataKey: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(YAxis, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Legend, {\n        verticalAlign: \"top\",\n        height: 36,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Line, {\n        name: \"light\",\n        type: \"monotone\",\n        dataKey: \"light\",\n        stroke: \"#8884d8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Line, {\n        name: \"rem\",\n        type: \"monotone\",\n        dataKey: \"rem\",\n        stroke: \"#82ca9d\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Line, {\n        name: \"wake\",\n        type: \"monotone\",\n        dataKey: \"wake\",\n        stroke: \"rgba(255,163,0)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Line, {\n        name: \"deep\",\n        type: \"monotone\",\n        dataKey: \"deep\",\n        stroke: \"rgba(133,207,218)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LineGraph;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    date: state.user.date,\n    sleep: state.user.sleep,\n    token: state.user.token\n  };\n};\n\nexport default connect(mapStateToProps)(LineGraph);","map":{"version":3,"sources":["/Users/dianayoo/Documents/FlatironSchool/JS/Mod-5-Final-Project/frontend_sleepTracker/src/components/analytics/LineGraph.js"],"names":["React","connect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LineGraph","prevProps","props","date","sleepInfo","token","sleep","level","levels","data","name","light","seconds","rem","wake","deep","amt","top","right","left","bottom","Component","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts'\n\nclass LineGraph extends React.Component {\n\n  componentDidUpdate(prevProps) {\n    // const userToken = localStorage.getItem('token')\n\n    if (this.props.date !== prevProps.date) {\n      this.props.sleepInfo(this.props.date, this.props.token)\n    }\n  }\n\n  render() {\n\n    if (this.props.sleep.sleep) {\n      const level = this.props.sleep.sleep[0].levels.data\n\n      var data = [\n        {name: '10 PM', light: level[0].seconds, rem: level[4].seconds, wake: level[0].seconds, deep: level[6].seconds, amt: 2400},\n        {name: '1 AM', light: level[1].seconds, rem: level[5].seconds, wake: level[1].seconds, deep: level[0].seconds, amt: 2400},\n        {name: '4 AM', light: level[2].seconds, rem: level[0].seconds, wake: level[2].seconds, deep: level[3].seconds, amt: 2400},\n        {name: '7 AM', light: level[3].seconds, rem: level[3].seconds, wake: level[3].seconds, deep: level[2].seconds, amt: 2400}\n      ]\n    }\n\n  \treturn (\n    \t<LineChart width={700} height={300} data={data}\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\n       <XAxis dataKey='name'/>\n       <YAxis/>\n       <CartesianGrid strokeDasharray='3 3'/>\n       <Tooltip/>\n       <Legend verticalAlign=\"top\" height={36}/>\n       <Line name=\"light\" type=\"monotone\" dataKey=\"light\" stroke=\"#8884d8\" />\n       <Line name=\"rem\" type=\"monotone\" dataKey=\"rem\" stroke=\"#82ca9d\" />\n       <Line name=\"wake\" type=\"monotone\" dataKey=\"wake\" stroke='rgba(255,163,0)' />\n       <Line name=\"deep\" type=\"monotone\" dataKey=\"deep\" stroke='rgba(133,207,218)' />\n      </LineChart>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    date: state.user.date,\n    sleep: state.user.sleep,\n    token: state.user.token\n  }\n}\n\nexport default connect(mapStateToProps)(LineGraph)\n"]},"metadata":{},"sourceType":"module"}